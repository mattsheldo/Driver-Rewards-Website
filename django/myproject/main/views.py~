from django.shortcuts import render, redirect
from django.http import HttpResponse
from django.contrib.auth.forms import AuthenticationForm
from . import AccountChecks
from .forms import UserRegisterForm
import mysql.connector

import mysql.connector

def verifyAccount(userUser):
    returnType = ""

    # Open connection
    try:
        mydb = mysql.connector.connect(
            host="cpsc4910group1rds.cwlgcbjw7kmo.us-east-1.rds.amazonaws.com",
            user="admin",
            password="adminpass"
        )

        # Look for a match in Drivers
        myCursor = mydb.cursor()
        query = "SELECT * FROM Drivers WHERE Username = '" + userUser + "';"
        try:
            # Execute query and get results
            myCursor.execute(query)
            myResults = myCursor.fetchall()

            # If a result is found, then there's a match
            if len(myResults) > 0:
                # Driver found
                returnType = "d"
                myCursor.close()
                mydb.close()
                return returnType
        except Exception:
            print("verifyAccount(): Failed to query Drivers")
        finally:
            myCursor.close()

        # Look for a match in Sponsors
        myCursor = mydb.cursor()
        query = "SELECT * FROM Sponsors WHERE Username = '" + userUser + "';"
        try:
            # Execute query and get results
            myCursor.execute(query)
            myResults = myCursor.fetchall()

            # If a result is found, then there's a match
            if len(myResults) > 0:
                # Sponsor found
                returnType = "s"
                myCursor.close()
                mydb.close()
                return returnType
        except Exception:
            print("verifyAccount(): Failed to query Sponsors")
        finally:
            myCursor.close()

        # Look for a match in Admins
        myCursor = mydb.cursor()
        query = "SELECT * FROM Admins WHERE Username = '" + userUser + "';"
        try:
            # Execute query and get results
            myCursor.execute(query)
            myResults = myCursor.fetchall()

            # If a result is found, then there's a match
            if len(myResults) > 0:
                # Admin found
                returnType = "a"
                myCursor.close()
                mydb.close()
                return returnType
        except Exception:
            print("verifyAccount(): Failed to query Admins")
        finally:
            myCursor.close()
    except Exception:
        print("verifyAccount(): Failed to connect")
    finally:
        mydb.close()
        return returnType

def findUsername():
    # Goal: find username of the most recent login to pass to verifyAccount()
    returnVal = ""
    # Open connection
    try:
        mydb = mysql.connector.connect(
            host="cpsc4910group1rds.cwlgcbjw7kmo.us-east-1.rds.amazonaws.com",
            user="admin",
            password="adminpass"
        )

        # Look for the most recent login
        myCursor = mydb.cursor()
        query = "SELECT username FROM auth_user ORDER BY last_login DESC;"
        try:
            # Execute query and get results
            myCursor.execute(query)
            myResults = myCursor.fetchall()

            # Get first result
            for x in myResults:
                returnVal = x
                myCursor.close()
                mydb.close()
                return returnVal
        except Exception:
            print("verifyAccount(): Failed to query auth_user")
        finally:
            myCursor.close()
    except Exception:
        print("verifyAccount(): Failed to connect")
    finally:
        mydb.close()
        return returnVal

def login(request):
    return render(request, 'homepage/homepage.html') 

def createAcc(request):
    if request.method == 'POST':
        form = UserRegisterForm(request.POST)
        if form.is_valid():
            form.save()
            # TODO: Get the type, based on the type, add an entry in either;
            # Drivers, Sponsors, or Admins
            # Drivers and Sponsors also require Employer_ID (dummy value of -1 for now)
            username = form.cleaned_data.get('username')
            password = form.cleaned_data.get('password')
            return redirect('http://54.88.218.67/home/' )
    else: 
        form = UserRegisterForm()
    return render(request, 'createAcc/register.html', {'form':form})

def logout(request):
    return render(request, 'logout/logout.html')

def home(request):
    loginUsername = findUsername()
    accType = verifyAccount(loginUsername)
    if accType == "d":
        return render(request, 'homepage/homepage.html')
    elif accType == "s":
        return render(request, 'homepage/homepage.html')
    elif accType == "a":
        return render(request, 'homepage/homepage.html')
    else render(request, 'login/login.html')
